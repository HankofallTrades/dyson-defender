@import url('https://fonts.googleapis.com/css2?family=Press+Start+2P&display=swap');
@import url('https://fonts.googleapis.com/css2?family=VT323&display=swap');

@keyframes scanlines {
  from {
    background-position: 0 0;
  }
  to {
    background-position: 0 4px;
  }
}

@keyframes glow {
  0% {
    text-shadow: 0 0 10px #ff00ff, 0 0 20px #ff00ff, 0 0 30px #ff00ff;
  }
  50% {
    text-shadow: 0 0 20px #ff00ff, 0 0 30px #ff00ff, 0 0 40px #ff00ff;
  }
  100% {
    text-shadow: 0 0 10px #ff00ff, 0 0 20px #ff00ff, 0 0 30px #ff00ff;
  }
}

.retro-button {
  background: linear-gradient(45deg, #ff00ff, #00ffff);
  border: 3px solid #ffffff;
  color: white;
  font-family: 'Press Start 2P', system-ui;
  font-size: 1.2rem;
  padding: 1rem 2rem;
  text-transform: uppercase;
  position: relative;
  overflow: hidden;
  transition: all 0.3s;
  text-shadow: 2px 2px 0 #000;
  box-shadow: 
    0 0 10px rgba(255, 0, 255, 0.5),
    0 0 20px rgba(255, 0, 255, 0.3),
    0 0 30px rgba(255, 0, 255, 0.1);
}

.retro-button:hover {
  transform: scale(1.05);
  box-shadow: 
    0 0 20px rgba(255, 0, 255, 0.8),
    0 0 30px rgba(255, 0, 255, 0.6),
    0 0 40px rgba(255, 0, 255, 0.4);
}

.retro-button:active {
  transform: scale(0.95);
}

.retro-text {
  font-family: 'Press Start 2P', system-ui;
  color: #00ffff;
  text-shadow: 2px 2px 0 #000;
  letter-spacing: 2px;
}

.retro-header {
  font-family: 'Press Start 2P', system-ui;
  color: #ff00ff;
  text-shadow: 
    0 0 10px #ff00ff,
    0 0 20px #ff00ff,
    2px 2px 0 #000;
  letter-spacing: 4px;
  animation: glow 2s ease-in-out infinite;
}

@keyframes pulse {
  0% {
    transform: translate(-50%, -50%) scale(1);
    opacity: 1;
  }
  50% {
    transform: translate(-50%, -50%) scale(1.05);
    opacity: 0.8;
  }
  100% {
    transform: translate(-50%, -50%) scale(1);
    opacity: 1;
  }
}

.pulse {
  animation: pulse 2s ease-in-out infinite;
}

@keyframes gameOverScanline {
  0% {
    transform: translateY(-100%);
  }
  100% {
    transform: translateY(100%);
  }
}

.game-over-screen {
  position: relative;
  overflow: hidden;
}

.game-over-screen::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  height: 10px;
  background: linear-gradient(
    180deg,
    transparent,
    rgba(255, 0, 255, 0.2),
    transparent
  );
  animation: gameOverScanline 2s linear infinite;
  pointer-events: none;
}

.game-over-text {
  animation: glitchText 0.2s ease-in-out infinite alternate;
}

@keyframes glitchText {
  0% {
    text-shadow: 
      2px 0 #00ffff,
      -2px 0 #ff00ff;
  }
  100% {
    text-shadow: 
      -2px 0 #00ffff,
      2px 0 #ff00ff;
  }
}

@keyframes valueChange {
  0% {
    filter: brightness(1);
  }
  50% {
    filter: brightness(2);
  }
  100% {
    filter: brightness(1);
  }
}

.value-change {
  animation: valueChange 0.3s ease-out;
}

.hud-value {
  transition: filter 0.3s ease;
}

.hud-value:hover {
  filter: brightness(1.5);
}

@keyframes bounce {
  0%, 100% {
    transform: translateY(0);
    opacity: 0.6;
  }
  50% {
    transform: translateY(-10px);
    opacity: 1;
  }
}

.bounce {
  animation: bounce 1s ease-in-out infinite;
}

/* Add a subtle gradient animation to the background */
@keyframes gradientShift {
  0% {
    background-position: 0% 50%;
  }
  50% {
    background-position: 100% 50%;
  }
  100% {
    background-position: 0% 50%;
  }
}

.gradient-bg {
  background: linear-gradient(
    45deg, 
    rgba(0,0,0,0.95), 
    rgba(83,0,130,0.95),
    rgba(130,0,83,0.95)
  );
  background-size: 200% 200%;
  animation: gradientShift 5s ease infinite;
}

@keyframes pulseBorder {
  0% {
    box-shadow: 
      0 0 20px rgba(255, 0, 255, 0.3),
      0 0 40px rgba(255, 0, 255, 0.2),
      inset 0 0 20px rgba(255, 0, 255, 0.2);
  }
  50% {
    box-shadow: 
      0 0 30px rgba(255, 0, 255, 0.5),
      0 0 60px rgba(255, 0, 255, 0.3),
      inset 0 0 30px rgba(255, 0, 255, 0.3);
  }
  100% {
    box-shadow: 
      0 0 20px rgba(255, 0, 255, 0.3),
      0 0 40px rgba(255, 0, 255, 0.2),
      inset 0 0 20px rgba(255, 0, 255, 0.2);
  }
}

.pulse-border {
  position: relative;
}

.pulse-border::after {
  content: "";
  position: absolute;
  top: -2px;
  left: -2px;
  right: -2px;
  bottom: -2px;
  border: 2px solid #ff00ff;
  border-radius: 8px;
  animation: pulse 2s infinite;
  pointer-events: none;
}

/* Progress bar styles */
.progress-bar {
  width: 100%;
  height: 10px;
  background: rgba(0, 0, 0, 0.5);
  border: 1px solid #00ffff;
  border-radius: 5px;
  overflow: hidden;
  margin-top: 5px;
}

.progress-fill {
  height: 100%;
  background: linear-gradient(90deg, #00ffff, #ff00ff);
  transition: width 0.3s ease;
}

.progress-fill.shield {
  background-color: #21a9f3;
  box-shadow: 0 0 12px 2px rgba(33, 169, 243, 0.7), 0 0 4px 1px rgba(33, 169, 243, 0.9) inset;
}

.progress-fill.player-health {
  background-color: #ff5722;
  box-shadow: 0 0 12px 2px rgba(255, 87, 34, 0.7), 0 0 4px 1px rgba(255, 87, 34, 0.9) inset;
}

.progress-fill.boost {
  background-color: #ffeb3b;
  box-shadow: 0 0 12px 2px rgba(255, 235, 59, 0.7), 0 0 4px 1px rgba(255, 235, 59, 0.9) inset;
}

/* Wave cooldown styles */
.wave-cooldown {
  font-size: 0.9rem;
  color: #ff00ff;
  text-shadow: 0 0 5px #ff00ff;
  animation: pulse 1s infinite alternate;
  margin-top: 10px;
}

/* Level-up notification styles */
.level-up-notification {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  background: rgba(0, 0, 0, 0.8);
  border: 4px solid #ff00ff;
  border-radius: 16px;
  padding: 30px;
  text-align: center;
  color: #00ffff;
  font-family: 'Press Start 2P', monospace;
  box-shadow: 0 0 30px rgba(255, 0, 255, 0.7);
  animation: scaleIn 0.5s ease-out, glow 2s ease-in-out infinite;
  z-index: 100;
}

.level-up-notification h2 {
  margin: 0 0 20px 0;
  font-size: 2rem;
  background: linear-gradient(180deg, #ff00ff, #00ffff);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  animation: textGlitch 1.5s infinite alternate;
}

.level-up-notification h3 {
  margin: 0 0 15px 0;
  font-size: 1.5rem;
  color: #ff00ff;
  text-shadow: 0 0 10px #ff00ff;
  animation: alertBlink 0.5s infinite alternate;
}

.level-up-notification p {
  margin: 0;
  font-size: 1.2rem;
  color: #ffffff;
  text-shadow: 0 0 5px #00ffff;
}

.level-up-notification p:last-child {
  margin-top: 10px;
  font-size: 1rem;
  color: #ffff00;
  text-shadow: 0 0 5px #ffff00;
  animation: countdownPulse 1s infinite alternate;
}

/* Wave announcement animations */
@keyframes textGlitch {
  0% {
    text-shadow: 
      2px 0 #ff00ff,
      -2px 0 #00ffff;
    transform: skew(0deg);
  }
  5% {
    text-shadow: 
      -2px 0 #ff00ff,
      2px 0 #00ffff;
    transform: skew(3deg);
  }
  10% {
    text-shadow: 
      2px 0 #ff00ff,
      -2px 0 #00ffff;
    transform: skew(0deg);
  }
  15% {
    text-shadow: 
      -2px 0 #ff00ff,
      2px 0 #00ffff;
    transform: skew(-3deg);
  }
  20%, 100% {
    text-shadow: 
      2px 0 #ff00ff,
      -2px 0 #00ffff;
    transform: skew(0deg);
  }
}

@keyframes alertBlink {
  0% {
    opacity: 1;
    text-shadow: 0 0 10px #ff00ff, 0 0 20px #ff00ff;
  }
  100% {
    opacity: 0.7;
    text-shadow: 0 0 15px #ff00ff, 0 0 30px #ff00ff;
  }
}

@keyframes countdownPulse {
  0% {
    transform: scale(1);
    text-shadow: 0 0 5px #ffff00;
  }
  100% {
    transform: scale(1.1);
    text-shadow: 0 0 15px #ffff00, 0 0 30px #ffff00;
  }
}

@keyframes scaleIn {
  0% {
    transform: translate(-50%, -50%) scale(0.5);
    opacity: 0;
  }
  70% {
    transform: translate(-50%, -50%) scale(1.1);
  }
  100% {
    transform: translate(-50%, -50%) scale(1);
    opacity: 1;
  }
}

/* Wire-frame scan effect for wave notifications */
.wave-notification-scan {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  border-radius: 16px;
  overflow: hidden;
  pointer-events: none;
}

.wave-notification-scan::before {
  content: '';
  position: absolute;
  top: -100%;
  left: 0;
  right: 0;
  height: 10px;
  background: linear-gradient(
    0deg,
    transparent 0%,
    rgba(0, 255, 255, 0.5) 50%,
    transparent 100%
  );
  animation: verticalScan 2s linear infinite;
}

.wave-notification-scan::after {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  bottom: 0;
  width: 10px;
  background: linear-gradient(
    90deg,
    transparent 0%,
    rgba(255, 0, 255, 0.5) 50%,
    transparent 100%
  );
  animation: horizontalScan 2s linear infinite;
}

@keyframes verticalScan {
  0% {
    top: -10%;
  }
  100% {
    top: 100%;
  }
}

@keyframes horizontalScan {
  0% {
    left: -10%;
  }
  100% {
    left: 100%;
  }
}

/* Additional pulse animation for class names */
@keyframes pulse-opacity {
  0% {
    opacity: 0.7;
  }
  100% {
    opacity: 1;
  }
}

/* HUD container specific styling */
.retro-hud-container {
  padding: 1rem;
  border: 2px solid #00ffff;
  border-radius: 8px;
  background: rgba(0, 0, 0, 0.7);
  box-shadow: 0 0 15px rgba(0, 255, 255, 0.5), inset 0 0 10px rgba(0, 255, 255, 0.3);
  animation: pulseBorder 2s ease-in-out infinite;
}

/* HUD label styling */
.retro-hud-label {
  font-family: 'Press Start 2P', system-ui;
  color: #ff00ff;
  margin-bottom: 0.5rem;
  font-size: 0.8rem;
  letter-spacing: 1px;
  text-shadow: 1px 1px 0 #000;
}

/* Score display styling */
.retro-score {
  font-family: 'Press Start 2P', system-ui;
  background: rgba(0, 0, 0, 0.7);
  border: 2px solid #ff00ff;
  border-radius: 8px;
  padding: 0.75rem;
  color: #ffff00;
  text-shadow: 0 0 10px #ffff00;
  box-shadow: 0 0 15px rgba(255, 0, 255, 0.5);
}

/* Damage effect animation */
@keyframes damage-pulse {
  0% {
    opacity: 0.9;
  }
  100% {
    opacity: 0.3;
  }
}

.damage-effect {
  pointer-events: none;
  z-index: 1000;
  animation: damage-pulse 0.3s ease-out forwards;
}

/* Reticle Animations */
.retro-reticle.pulsating {
  animation: reticle-pulse 1.5s infinite alternate;
}

@keyframes reticle-pulse {
  0% {
    opacity: 0.7;
    transform: translate(-50%, -50%) scale(0.95);
  }
  100% {
    opacity: 1;
    transform: translate(-50%, -50%) scale(1.05);
  }
}

@keyframes radar-scan {
  0% {
    transform: translate(-50%, -50%) rotate(0deg);
  }
  100% {
    transform: translate(-50%, -50%) rotate(360deg);
  }
}

/* Retro Sci-fi UI Styles */

/* Animation keyframes */
@keyframes pulse {
  0% { box-shadow: 0 0 10px rgba(255, 0, 255, 0.5); }
  50% { box-shadow: 0 0 20px rgba(255, 0, 255, 0.8); }
  100% { box-shadow: 0 0 10px rgba(255, 0, 255, 0.5); }
}

@keyframes text-glow {
  0% { text-shadow: 0 0 5px #00ffff; }
  50% { text-shadow: 0 0 15px #00ffff; }
  100% { text-shadow: 0 0 5px #00ffff; }
}

/* Full screen overlay styles */
.retro-screen {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
  background-color: rgba(0, 0, 0, 0.85);
  color: #00ffff;
  font-family: 'Press Start 2P', monospace;
  z-index: 1000;
  pointer-events: all;
}

/* Container for screen content */
.retro-container {
  display: flex;
  flex-direction: column;
  align-items: center;
  padding: 30px;
  border: 2px solid #ff00ff;
  background-color: rgba(0, 0, 20, 0.9);
  box-shadow: 0 0 20px rgba(255, 0, 255, 0.7);
  border-radius: 5px;
  animation: pulse 2s infinite;
  max-width: 700px;
  width: 80%;
}

/* Title and subtitle styles */
.retro-title {
  font-size: 32px;
  color: #00ffff;
  margin-bottom: 15px;
  text-align: center;
  text-transform: uppercase;
  animation: text-glow 2s infinite;
}

.retro-subtitle {
  font-size: 16px;
  color: #ff00ff;
  margin-bottom: 30px;
  text-align: center;
}

/* Panel for instructions or stats */
.retro-panel {
  background-color: rgba(0, 0, 60, 0.5);
  border: 1px solid #00ffff;
  padding: 20px;
  margin-bottom: 30px;
  width: 100%;
  border-radius: 5px;
}

.retro-panel h2 {
  font-size: 18px;
  color: #00ffff;
  margin-bottom: 15px;
  text-align: center;
  text-transform: uppercase;
}

/* Button styles */
.retro-button {
  background-color: rgba(0, 0, 60, 0.7);
  color: #00ffff;
  border: 2px solid #00ffff;
  padding: 15px 30px;
  font-family: 'Press Start 2P', monospace;
  font-size: 16px;
  text-transform: uppercase;
  cursor: pointer;
  transition: all 0.3s ease;
  border-radius: 5px;
  outline: none;
  box-shadow: 0 0 10px rgba(0, 255, 255, 0.5);
  touch-action: manipulation;
  -webkit-user-select: none;
  user-select: none;
  -webkit-tap-highlight-color: transparent;
}

.retro-button:hover {
  background-color: rgba(0, 255, 255, 0.3);
  box-shadow: 0 0 20px rgba(0, 255, 255, 0.8);
  transform: scale(1.05);
}

.retro-button:active {
  transform: scale(0.98);
  background-color: rgba(0, 255, 255, 0.4);
  box-shadow: 0 0 25px rgba(0, 255, 255, 1);
}

/* Ensure button is more tappable on mobile */
@media (max-width: 768px) {
  .retro-button {
    padding: 16px 32px;
    font-size: 18px;
    margin: 10px 0;
    position: relative;
    z-index: 10000; /* Ensure button is on top of all other elements */
    touch-action: manipulation !important;
    -webkit-tap-highlight-color: transparent !important;
  }
  
  /* Create an enhanced tap target by adding a pseudo-element */
  .retro-button::after {
    content: '';
    position: absolute;
    top: -10px;
    left: -10px;
    right: -10px;
    bottom: -10px;
    z-index: -1;
  }
  
  .ship-console {
    font-size: 0.8rem;
    line-height: 1.3;
    bottom: 5px;
  }
  
  .console-panel {
    transform: scale(0.85);
    transform-origin: bottom center;
    padding: 5px !important;
    height: auto !important;
    max-height: 80px !important; /* More aggressive height limit */
    overflow-y: auto;
    -webkit-overflow-scrolling: touch;
    font-size: 0.75em !important;
  }
  
  /* Improve game over screen on mobile */
  .game-over-screen h1 {
    font-size: 3rem !important;
    margin-bottom: 1rem !important;
  }
  
  .game-over-screen .retro-text {
    padding: 1rem !important;
    margin-bottom: 1rem !important;
  }
  
  .game-over-screen .retro-button {
    margin-top: 0 !important;
    padding: 1rem 2rem !important;
  }
}

/* Instructions panel specific styles */
.instruction-panel ul {
  list-style-type: none;
  padding: 0;
}

.instruction-panel li {
  font-size: 14px;
  color: #ffffff;
  margin-bottom: 10px;
  padding-left: 20px;
  position: relative;
}

.instruction-panel li:before {
  content: ">";
  position: absolute;
  left: 0;
  color: #ff00ff;
}

/* Stats panel specific styles */
.stats-grid {
  display: grid;
  grid-template-columns: 1fr;
  gap: 15px;
}

.stat-row {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.stat-label {
  color: #ff00ff;
  font-size: 14px;
}

.stat-value {
  color: #00ffff;
  font-size: 16px;
  font-weight: bold;
}

/* Ship Console Styling */
.ship-console {
  font-family: 'Press Start 2P', monospace;
  text-shadow: 2px 2px 0 #000, 0 0 10px #00ffff;
  line-height: 1.6;
  position: relative;
}

/* Cockpit frame effect for ship console */
.ship-console::before {
  content: '';
  position: absolute;
  top: -20px;
  left: -5%;
  right: -5%;
  bottom: -10px;
  z-index: -1;
  border-top-left-radius: 50% 100%;
  border-top-right-radius: 50% 100%;
  background: 
    linear-gradient(
      to bottom,
      transparent 0%,
      rgba(0, 0, 0, 0.4) 70%,
      rgba(0, 0, 0, 0.6) 100%
    );
  border-top: 2px solid rgba(255, 0, 255, 0.3);
  pointer-events: none;
}

.console-panel {
  position: relative;
  overflow: hidden;
}

.console-panel::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  height: 3px;
  background: linear-gradient(90deg, 
    transparent 0%, 
    rgba(255, 0, 255, 0.8) 20%, 
    rgba(0, 255, 255, 0.8) 50%, 
    rgba(255, 0, 255, 0.8) 80%, 
    transparent 100%
  );
  animation: panGradient 3s ease-in-out infinite alternate;
}

@keyframes panGradient {
  0% {
    background-position: -50px 0;
  }
  100% {
    background-position: 200px 0;
  }
}

/* Console terminal text effect */
.console-content {
  font-family: 'Courier New', monospace;
  letter-spacing: 1px;
}

/* Console scanner effect styling */
@keyframes console-scan-ping {
  0% { opacity: 0.2; }
  50% { opacity: 0.5; }
  100% { opacity: 0.2; }
}

@keyframes console-vertical-scan {
  0% { top: -5%; }
  100% { top: 105%; }
}

@keyframes console-horizontal-scan {
  0% { left: -5%; }
  100% { left: 105%; }
}

.console-scanner div:first-child {
  animation: console-vertical-scan 3s linear infinite;
}

.console-scanner div:last-child {
  animation: console-horizontal-scan 4s linear infinite;
}

/* Wave notification specific animations */
@keyframes urgent-vertical-scan {
  0% { 
    top: -10%; 
    box-shadow: 0 0 10px rgba(0, 255, 255, 0.8);
  }
  50% {
    box-shadow: 0 0 15px rgba(0, 255, 255, 1);
  }
  100% { 
    top: 110%;
    box-shadow: 0 0 10px rgba(0, 255, 255, 0.8);
  }
}

@keyframes urgent-horizontal-scan {
  0% { 
    left: -10%; 
    box-shadow: 0 0 10px rgba(255, 0, 255, 0.8);
  }
  50% {
    box-shadow: 0 0 15px rgba(255, 0, 255, 1);
  }
  100% { 
    left: 110%;
    box-shadow: 0 0 10px rgba(255, 0, 255, 0.8);
  }
}

@keyframes wave-alert-flicker {
  0%, 5%, 10%, 15%, 60%, 65%, 100% {
    opacity: 1;
  }
  2%, 8%, 12%, 62% {
    opacity: 0.6;
  }
}

/* Alert message blinking effect */
@keyframes alert-text-blink {
  0%, 49% { 
    color: #ff5555;
    text-shadow: 0 0 5px #ff5555;
  }
  50%, 100% { 
    color: #ffaa00;
    text-shadow: 0 0 8px #ffaa00;
  }
}

/* New notification indicator pulse */
@keyframes notification-pulse {
  0%, 100% { 
    transform: scale(1);
    opacity: 0.7;
  }
  50% { 
    transform: scale(1.2);
    opacity: 1;
  }
}

.notification-indicator {
  display: inline-block;
  width: 8px;
  height: 8px;
  border-radius: 50%;
  background-color: #ff5555;
  animation: notification-pulse 1s infinite;
  margin-left: 5px;
  box-shadow: 0 0 5px #ff5555;
}

/* Additional animation for the radar sweep */
@keyframes radar-ping {
  0%, 100% { opacity: 0.2; transform: scale(1); }
  50% { opacity: 0.8; transform: scale(1.05); }
}

/* Floating score animation */
.floating-score {
  animation: float-upward 1.5s forwards;
  pointer-events: none;
}

@keyframes float-upward {
  0% {
    transform: translate(-50%, -50%) scale(0.8);
  }
  30% {
    transform: translate(-50%, -70%) scale(1.2);
  }
  100% {
    transform: translate(-50%, -100%) scale(0.8);
  }
}

/* CRT screen effect for wave notifications */
.wave-alert-overlay {
  position: relative;
  overflow: hidden;
}

.wave-alert-overlay::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: 
    linear-gradient(
      to bottom,
      rgba(0, 0, 0, 0) 50%,
      rgba(0, 0, 0, 0.25) 50%
    );
  background-size: 100% 4px;
  pointer-events: none;
  z-index: 3;
  opacity: 0.3;
}

.wave-alert-overlay::after {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: radial-gradient(
    circle at center,
    transparent 60%,
    rgba(0, 0, 0, 0.8) 100%
  );
  pointer-events: none;
  z-index: 3;
  opacity: 0.4;
}

@keyframes wave-alert-flicker {
  0%, 5%, 10%, 15%, 60%, 65%, 100% {
    opacity: 1;
  }
  2%, 8%, 12%, 62% {
    opacity: 0.6;
  }
}

/* Typewriter animation for alerts */
@keyframes typewriter {
  from { width: 0; }
  to { width: 100%; }
}

@keyframes cursor-blink {
  0%, 49% { opacity: 1; }
  50%, 100% { opacity: 0; }
}

.typing-animation {
  position: relative;
  overflow: hidden;
  white-space: nowrap;
  border-right: 0.15em solid #00ff00;
  width: fit-content;
  animation: 
    typing 3.5s steps(40, end),
    blink-caret 0.75s step-end infinite;
}

@keyframes typing {
  from { width: 0 }
  to { width: 100% }
}

@keyframes blink-caret {
  from, to { border-color: transparent; }
  50% { border-color: inherit; }
}

/* Add these hologram-specific animations */
@keyframes scanline {
  0% {
    background-position: 0 0;
  }
  100% {
    background-position: 0 100%;
  }
}

@keyframes hologram-flicker {
  0% {
    opacity: 0.1;
  }
  5% {
    opacity: 0.2;
  }
  10% {
    opacity: 0.1;
  }
  15% {
    opacity: 0.3;
  }
  20% {
    opacity: 0.1;
  }
  50% {
    opacity: 0.15;
  }
  70% {
    opacity: 0.2;
  }
  80% {
    opacity: 0.1;
  }
  90% {
    opacity: 0.3;
  }
  100% {
    opacity: 0.1;
  }
}

/* --- NEW STYLES --- */

/* Top Center Alerts Container */
.top-center-alerts {
  position: absolute;
  top: 20px; /* Position below the very top edge */
  left: 50%;
  transform: translateX(-50%);
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 8px; /* Space between alerts */
  z-index: 90; /* Below central wave alert, above game */
  pointer-events: none; /* Allow clicks through */
  width: 80%; /* Limit width */
  max-width: 500px;
}

/* Individual Game Alert Style */
.game-alert {
  background: rgba(255, 0, 80, 0.8); /* Bright pink background */
  color: white;
  padding: 6px 12px;
  border-radius: 4px;
  border: 1px solid rgba(255, 100, 150, 0.8);
  font-family: 'Press Start 2P', monospace;
  font-size: 0.8rem; /* Smaller font size */
  text-shadow: 1px 1px 0 #000;
  box-shadow: 0 0 8px rgba(255, 0, 80, 0.6);
  animation: fade-in-out 3s ease-out forwards; /* Use existing animation */
  opacity: 0;
  text-align: center;
}

/* Update fade-in-out animation for faster appearance */
@keyframes fade-in-out {
  0% { opacity: 0; transform: translateY(5px); }
  15% { opacity: 1; transform: translateY(0); } /* Appear faster */
  85% { opacity: 1; transform: translateY(0); } /* Hold longer */
  100% { opacity: 0; transform: translateY(-5px); } /* Fade out faster */
}

/* Ensure typing animation styles are available */
/* These seem to exist already based on file outline, but adding defensively */
@keyframes typewriter {
  from { width: 0; }
  to { width: 100%; }
}

@keyframes cursor-blink {
  from, to { opacity: 0; } /* Use opacity for cursor */
  50% { opacity: 1; }
}

.typing-animation {
  display: inline-block;
  overflow: hidden;
  white-space: nowrap;
  width: 0;
  border-right: 2px solid transparent; /* Use border for cursor */
  animation:
    typewriter 1s steps(30, end) forwards,
    cursor-blink .75s step-end infinite;
  animation-delay: calc(var(--delay, 0) * 0.8s); /* Use variable delay */
  vertical-align: bottom;
}

/* Hide cursor after animation finishes */
.typing-animation:not(:empty) {
   /* Keep border transparent by default */
}

/* Ensure scanline/CRT effects are defined correctly */
/* .wave-alert-overlay styles likely exist, this adds the scanlines within */
.wave-notification-scan {
  /* Styles for the moving scanlines within the wave alert box */
   position: absolute;
   top: 0; left: 0; right: 0; bottom: 0;
   border-radius: 15px; /* Match parent border-radius */
   overflow: hidden;
   pointer-events: none;
}

.wave-notification-scan::before {
  content: '';
  position: absolute;
  top: -100%; /* Start above */
  left: 0; right: 0;
  height: 10px; /* Scanline height */
  background: linear-gradient(
    0deg, transparent 0%, rgba(0, 255, 255, 0.5) 50%, transparent 100%
  );
  animation: verticalScan 2s linear infinite;
}

.wave-notification-scan::after {
  content: '';
  position: absolute;
  top: 0; bottom: 0;
  left: -100%; /* Start left */
  width: 10px; /* Scanline width */
  background: linear-gradient(
    90deg, transparent 0%, rgba(255, 0, 255, 0.5) 50%, transparent 100%
  );
  animation: horizontalScan 2.5s linear infinite; /* Slightly different speed */
}

/* Add keyframes if they don't exist */
@keyframes verticalScan {
  0% {
    transform: translateY(-100%);
  }
  100% {
    transform: translateY(100%);
  }
}

@keyframes horizontalScan {
  0% {
    transform: translateX(-100%);
  }
  100% {
    transform: translateX(100%);
  }
}


/* Hologram Container - Ensure it doesn't capture pointer events */
.hologram-container {
  pointer-events: none;
}

/* CommsDisplay Styles */
.comms-display {
  width: 280px;
  height: 180px;
  background: rgba(0, 0, 0, 0.7);
  border-top: 2px solid #ff00ff;
  border-left: 2px solid #ff00ff;
  border-right: 2px solid #ff00ff;
  border-top-left-radius: 15px;
  border-top-right-radius: 15px;
  box-shadow: 0 0 15px rgba(255, 0, 255, 0.5), inset 0 0 10px rgba(0, 255, 255, 0.2);
  padding: 12px;
  overflow-y: auto;
  font-family: 'Press Start 2P', monospace;
  font-size: 0.7rem;
  color: #00ff00;
  display: flex;
  flex-direction: column;
  position: relative; /* For positioning the alerts overlay */
}

.comms-header {
  border-bottom: 1px solid #ff00ff;
  padding-bottom: 5px;
  margin-bottom: 5px;
  color: #ff00ff;
  font-size: 0.6rem;
}

.comms-content {
  flex-grow: 1;
  overflow-y: auto; /* Keep scrolling enabled */
  scroll-behavior: smooth;
  position: relative;
  max-height: 130px;
  scrollbar-width: none; /* Hide scrollbar for Firefox */
  -ms-overflow-style: none; /* Hide scrollbar for IE/Edge */
}

/* Hide scrollbar for WebKit browsers */
.comms-content::-webkit-scrollbar {
  display: none;
}

.comms-message {
  margin-bottom: 8px;
  width: 100%;
  line-height: 1.2;
  word-break: break-word;
  transition: color 0.3s ease-in-out;
}

.comms-empty {
  color: #666666;
  font-style: italic;
}

/* Alerts overlay for CommsDisplay */
.comms-content-alert-overlay {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: -2px; /* Extend slightly below to ensure full coverage */
  background-color: rgb(0, 0, 0); /* Solid black background */
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  z-index: 10;
  padding: 10px; /* Increase padding slightly */
  box-sizing: border-box; /* Ensure padding is included */
}

/* This is the old overlay that covered the whole comms display (including header) */
.comms-alert-overlay {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(0, 0, 0, 0.85);
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  z-index: 10;
  padding: 10px;
  border-radius: 15px;
}

.comms-alert-warning {
  color: #ff9900;
  font-size: 0.8rem;
  text-shadow: 0 0 15px #ff9900;
  animation: alert-text-blink 1s infinite;
  font-family: 'Press Start 2P', monospace;
  margin-bottom: 0.5rem;
  letter-spacing: 0.1rem;
  text-align: center;
}

.comms-alert-wave {
  color: #ff5555;
  font-size: 0.8rem;
  text-shadow: 0 0 15px #ff5555;
  animation: alert-text-blink 1s infinite;
  font-family: 'Press Start 2P', monospace;
  margin-bottom: 0.5rem;
  letter-spacing: 0.1rem;
  text-align: center;
}

.comms-alert-countdown {
  font-size: 1.2rem;
  color: #ffffff;
  font-family: 'Press Start 2P', monospace;
}

.typing-objective {
  display: flex;
  align-items: center;
  color: #00ff00 !important;
  margin-top: 5px;
}

.cursor-blink {
  display: inline-block;
  margin-left: 2px;
  animation: cursor-blink 0.8s infinite;
  color: inherit;
}

@keyframes cursor-blink {
  0%, 49% {
    opacity: 1;
  }
  50%, 100% {
    opacity: 0;
  }
}

@keyframes alert-text-blink {
  0%, 49% {
    opacity: 1;
  }
  50%, 59% {
    opacity: 0.7;
  }
  60%, 100% {
    opacity: 1;
  }
}

/* Comms message container */
.comms-message-container {
  margin-bottom: 8px;
  width: 100%;
}

/* Comms message line styling */
.comms-message-line {
  font-family: 'VT323', 'Courier New', monospace;
  word-break: keep-all;
  line-height: 1.2;
  letter-spacing: 0.1em;
  margin-bottom: 2px;
  white-space: pre;
  position: relative;
  text-shadow: 
    0 0 2px currentColor,
    0 0 4px rgba(0, 255, 0, 0.4);
  font-weight: normal;
  font-size: 0.8rem;
}

/* Container for the text content to allow inline cursor */
.line-content {
  display: inline;
}

/* Inline cursor styling */
.inline-cursor {
  display: inline-block;
  color: inherit;
  animation: cursor-blink 0.8s step-end infinite;
  vertical-align: baseline;
  /* No margin needed if placed directly after text span */
}

/* Typing animation for new messages (objective and regular) */
.comms-message-line.first-line.objective-typing,
.comms-message-line.first-line.message-typing {
  overflow: hidden;
  white-space: nowrap;
  width: 0;
  animation-name: typing-reveal;
  animation-timing-function: steps(40, end);
  animation-fill-mode: forwards;
}

/* Different durations for objective vs regular */
.comms-message-line.first-line.objective-typing {
  animation-duration: 3s;
}

.comms-message-line.first-line.message-typing {
  animation-duration: 2s;
}

/* Keyframes for typing reveal animation */
@keyframes typing-reveal {
  from { width: 0; }
  to { width: 100%; }
}

/* Styling for threat messages */
.comms-message-line.threat-message {
  /* Ensure specific threat styling if needed, otherwise handled inline */
}

/* Styling for objective messages */
.comms-message-line.objective-message {
  /* Ensure specific objective styling if needed, otherwise handled inline */
}

/* Ensure blocky text shadow applies */
.comms-message-line {
  text-shadow: 
    0 0 2px currentColor,
    0 0 4px rgba(0, 255, 0, 0.4);
  font-weight: normal;
  font-size: 0.8rem;
}

/* Retro terminal text styling */
.retro-terminal-text {
  font-family: 'VT323', 'Courier New', monospace;
  letter-spacing: 0.1em;
  margin-bottom: 8px;
}

/* Typing animation for the objective message with continuous blinking */
.typing-animation-line {
  position: relative;
  overflow: hidden;
  white-space: nowrap;
  width: 0;
  animation: typing 3s steps(40, end) forwards;
  margin-bottom: 2px;
}

/* Make the cursor stay visible and keep blinking indefinitely */
.typing-animation-line.first-line::after {
  content: "▌"; /* Use a block character for cursor */
  display: inline-block;
  color: inherit;
  animation: cursor-blink 0.8s step-end infinite; /* Blink indefinitely */
  position: absolute;
  right: -0.25em;
  opacity: 1;
}

/* Typing animation for any message containing THREAT - new messages get the animation */
.comms-message-line.first-line.new-message {
  position: relative;
  white-space: nowrap;
  animation: typing-text 2s steps(40, end);
}

/* Special styling for threat messages */
.comms-message-line.first-line.threat-message {
  /* Ensure specific threat styling if needed, otherwise handled inline */
}

/* Remove the absolute positioned cursors */
.comms-message-line.first-line.threat-message::after,
.typing-animation-line.first-line::after {
  content: none;
}

@keyframes typing-text {
  from { clip-path: inset(0 100% 0 0); }
  to { clip-path: inset(0 0 0 0); }
}

/* Create blocky text shadow for retro terminal look */
.typing-animation-line, .comms-message-line {
  text-shadow: 
    0 0 2px currentColor,
    0 0 4px rgba(0, 255, 0, 0.4);
  font-weight: normal;
  font-size: 0.8rem;
}

@keyframes typing {
  from { width: 0 }
  to { width: 100% }
}

/* Remove the absolute positioning for cursors and use inline style instead */
.inline-cursor {
  display: inline-block;
  color: inherit;
  animation: cursor-blink 0.8s step-end infinite;
  margin-left: 2px;
  vertical-align: baseline;
}

/* Typing animation for any message containing THREAT - new messages get the animation */
.comms-message-line.first-line.new-message {
  position: relative;
  white-space: nowrap;
  animation: typing-text 2s steps(40, end);
}

/* Special styling for threat messages */
.comms-message-line.first-line.threat-message {
  /* Ensure specific threat styling if needed, otherwise handled inline */
}

/* Remove the absolute positioned cursors */
.comms-message-line.first-line.threat-message::after,
.typing-animation-line.first-line::after {
  content: none;
}

/* Typing animation for the objective message */
.typing-animation-line {
  position: relative;
  overflow: hidden;
  white-space: nowrap;
  width: 0;
  animation: typing 3s steps(40, end) forwards;
  margin-bottom: 2px;
}

/* Mobile-specific styling for radar */
@media (max-width: 768px) {
  .mobile-radar {
    position: absolute;
    top: 10px;
    right: 10px;
    z-index: 100;
    transform: scale(0.8);
    transform-origin: top right;
  }
} 